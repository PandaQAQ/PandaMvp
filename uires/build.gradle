plugins {
    id 'com.android.library'
    id 'maven'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            debuggable inDebug.toBoolean()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        appTest {
            debuggable inDebug.toBoolean()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable inDebug.toBoolean()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", "project.getName()")
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

task androidSourcesJar(type: Jar) {
    classifier = 'source'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}

uploadArchives {
    repositories.mavenDeployer {
        // 本地仓库路径
        repository(url: uri('/Users/pandaq/Desktop/Maven'))
        // 唯一标识
        pom.groupId = 'com.pandaq'
        // 模块名称
        pom.artifactId = 'panda-uires'
        // 版本号
        pom.version = UIRES_VERSION
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation files('libs/core_3.0.1.jar')
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["androix-junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["design"]
    api(rootProject.ext.dependencies["brvah"])
    api(rootProject.ext.dependencies["constraint-layout"])
    api(rootProject.ext.dependencies["refresh-layout"])
    api(rootProject.ext.dependencies["refresh-header"])
    api(rootProject.ext.dependencies["pickerview"])
    api(rootProject.ext.dependencies["calendar"])
    api(rootProject.ext.dependencies["supertextview"])
    api(rootProject.ext.dependencies["colorpicker"])
    api(rootProject.ext.dependencies["matisse"])
    api(rootProject.ext.dependencies["tablayout"])
    api rootProject.ext.dependencies["material-dialogs"]
    api rootProject.ext.dependencies["xpopup"]
    api rootProject.ext.dependencies["gifdrawable"]
    api rootProject.ext.dependencies["androidchart"]
    api rootProject.ext.dependencies["arouter"]
    kapt rootProject.ext.dependencies["arouter_compiler"]

    if (inUploadArchiveMode.toBoolean()) {
        api "com.pandaq:panda-core:$UIRES_VERSION"
    } else {
        implementation(project(':sdk_core'))
    }
}
