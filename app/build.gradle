apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        compileSdkVersion rootProject.ext.android["compileSdkVersion"]
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner rootProject.ext.android["runner"]
        multiDexEnabled true
        multiDexKeepProguard file('multidex-config.pro')
        ndk {
            abiFilters "armeabi"
            abiFilters "arm64-v8a"
            abiFilters "armeabi-v7a"
            abiFilters "x86"
            abiFilters "x86_64"
        }
    }

    signingConfigs {
        release {
            storeFile file("../keystore.jks")
            storePassword "123456"
            keyAlias "pandaq"
            keyPassword "123456"
        }

        debug {
            storeFile file("../keystore.jks")
            storePassword "123456"
            keyAlias "pandaq"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        appTest {
            debuggable true
            signingConfig signingConfigs.debug
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    buildFeatures{
        viewBinding true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            output -> outputFileName = "app_v${variant.versionName}_${variant.versionCode}.apk"
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation rootProject.ext.dependencies["appcompat"]
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["androix-junit"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    implementation rootProject.ext.dependencies["design"]

    kapt rootProject.ext.dependencies["arouter_compiler"]

    // 支付模块
    implementation(project(':functionlibs:pay'))

    // 按需加载依赖业务 APP
    if (buildAll.toBoolean()) {
        for (String name : allComponents.split(",")) {
            implementation(project(":$name"))
        }
    } else {
        for (String name : loadComponents.split(",")) {
            if (!name.isEmpty()) {
                implementation(project(":$name"))
            }
        }
    }
}
